<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:views="clr-namespace:ToDoListApp.Views"
    xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
    x:Class="ToDoListApp.Views.TodoListPage"
    x:Name="todoListPage"
    Title="Home"
    Shell.PresentationMode="ModalAnimated">
    <!--<ContentPage.ToolbarItems>
        <ToolbarItem Clicked="MarkSelectedItemsComplete" IconImageSource="donetoolbar.png"/>
        <ToolbarItem Clicked="DeleteSelectedItems" IconImageSource="trash.png"/>
        <ToolbarItem Clicked="OnItemAdded" IconImageSource="icon.png"/>
        <ToolbarItem Clicked="OpenMenu" IconImageSource="menu.png"/>
    </ContentPage.ToolbarItems>-->

    <NavigationPage.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label x:Name="labeltitle" Grid.Column="0" TextColor="White" VerticalOptions="Center" FontFamily="Inter-Regular"
                   VerticalTextAlignment="Center" FontSize="16" HorizontalOptions="Start"/>
            <ImageButton Grid.Column="1" Source="donetoolbar.png" WidthRequest="30" Clicked="MarkSelectedItemsComplete"/>
            <ImageButton Grid.Column="2" Source="trash.png" WidthRequest="30" HeightRequest="25" Clicked="DeleteSelectedItems"/>
            <ImageButton Grid.Column="3" Source="icon.png" WidthRequest="30" HeightRequest="25" Clicked="OnItemAdded"/>
            <ImageButton Grid.Column="4" Source="menu.png" WidthRequest="30" Clicked="OpenMenu"/>
        </Grid>
    </NavigationPage.TitleView>

    <Grid BackgroundColor="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--<views:HeaderGrid x:Name="HeaderGrid" Grid.Row="0"/>-->

        <Frame x:Name="SearchContainer" HeightRequest="40" Grid.Row="1" Margin="5" Padding="5" Style="{StaticResource CustomFrame}" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!-- Search Bar -->
                <SearchBar HorizontalOptions="StartAndExpand" Grid.Row="0" Grid.Column="0" Placeholder="Search" x:Name="SearchBar"
                           ios:SearchBar.SearchBarStyle="Minimal" TextChanged="SearchBar_TextChangedAsync"/>

                <!-- Sort Button -->
                <ImageButton Clicked="OpenSortMenu" Source="sort.png" BackgroundColor="Transparent" Grid.Row="0" Grid.Column="1" BorderColor="Transparent" HorizontalOptions="End"
                             Margin="0,0,0,0" AbsoluteLayout.LayoutBounds="0.2, 0.5, 30, 35" AbsoluteLayout.LayoutFlags="PositionProportional"/>
            </Grid>
        </Frame>

        <VerticalStackLayout x:Name="VStack" Grid.RowSpan="3" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
            <Image Source="checklist_icon.png" Aspect="AspectFit" WidthRequest="200" HeightRequest="200" Margin="0,0,0,30"/>
            <Label Text="Nothing to show yet, Create an item by tapping on +" HorizontalTextAlignment="Center" FontFamily="Inter-Regular" FontSize="14"/>
            <Label Text="Or go into settings and generate some dummy data!" HorizontalTextAlignment="Center" FontSize="14" FontFamily="Inter-Regular"/>
        </VerticalStackLayout>

        <ListView x:Name="listView" Grid.Row="2" Margin="10" ItemSelected="OnListItemSelected" RowHeight="115" SeparatorVisibility="None"
                  CachingStrategy="RecycleElement" BackgroundColor="{AppThemeBinding Light={DynamicResource White}, Dark={DynamicResource Black}}" IsPullToRefreshEnabled="True" Refreshing="RefreshView_Refreshing">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <ViewCell>
                        <Border Padding="5,0,0,0" Margin="5">
                            <Grid RowSpacing="0" ColumnSpacing="0" Margin="-5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="{OnPlatform iOS=20, Android=30}" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="150" />
                                    <ColumnDefinition Width="{OnPlatform iOS=Auto, Android=70}" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <HorizontalStackLayout Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Spacing="5">
                                    <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Margin="15,10,0,0" HorizontalOptions="StartAndExpand" VerticalOptions="End"
                                       Text="{Binding Name}" LineBreakMode="TailTruncation" FontSize="20" FontFamily="Inter-Bold" />

                                <Frame Grid.Row="0" Grid.Column="2" WidthRequest="30" VerticalOptions="End" HorizontalOptions="Start" HeightRequest="25" Padding="0"
                                       BackgroundColor="{AppThemeBinding Dark=DarkGray, Light={StaticResource DarkGH}}" IsVisible="{Binding HasAttachment}">
                                    <Image Source="attachment.png" Aspect="AspectFit" HeightRequest="50" WidthRequest="15"/>
                                </Frame>

                                </HorizontalStackLayout>

                                <CheckBox Grid.Row="1" Grid.Column="4" Margin="0,0,15,0" x:Name="SelectedBox" IsChecked="{Binding IsSelected}" Focused="OnCheckBoxChecked" Unfocused="OnCheckBoxUnchecked"/>

                                <Frame BorderColor="Transparent" Grid.Column="0" HasShadow="False" Grid.RowSpan="5" Margin="{OnPlatform Android='-10,-10,0,-20', iOS='-10,-10,0,-30'}" WidthRequest="25" HorizontalOptions="Start">
                                    <Frame.Triggers>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="High">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource HighPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Medium">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource MediumPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Low">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource LowPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Critical">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource CriticalPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="">
                                            <Setter Property="BackgroundColor" Value="Transparent" />
                                        </DataTrigger>
                                    </Frame.Triggers>
                                </Frame>

                                <Label Grid.ColumnSpan="5" Grid.Row="1" Grid.Column="1" HorizontalOptions="StartAndExpand" LineBreakMode="TailTruncation"
                                       Margin="15,5,0,0" VerticalOptions="Start" FontSize="Body" WidthRequest="250" HeightRequest="{OnPlatform iOS=20}"
                                       Text="{Binding Notes}" FontFamily="Inter-Regular" />

                                <Frame Grid.Row="2" Grid.Column="1" WidthRequest="130" Padding="6,0,0,0" Margin="20,10,15,0" HeightRequest="25" BackgroundColor="Transparent" BorderColor="Gray">
                                    <HorizontalStackLayout>
                                    <Image Source="calendar.png" Aspect="AspectFit" MaximumWidthRequest="15" Margin="0,0,4,0"/>
                                        <Label HorizontalOptions="StartAndExpand" VerticalOptions="Center" WidthRequest="120" TextColor="{AppThemeBinding Dark=DarkGray, Light=Black}" FontFamily="Inter-Regular">
                                            <Label.FormattedText>
                                                <FormattedString>
                                                    <!--<Span Text="📅 " FontSize="Medium"/>  Emoji--> 
                                                    <Span Text="{Binding Date, StringFormat='{0:MMM dd, HH:mm}'}" />
                                                </FormattedString>
                                            </Label.FormattedText>
                                        </Label>
                                    </HorizontalStackLayout>
                                </Frame>

                                <!--<Frame Grid.Row="1" Grid.Column="2" WidthRequest="70" Padding="0,0,0,0" Margin="0,10,40,0" HeightRequest="25" BorderColor="Transparent">
                                    <Frame.Triggers>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="High">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource HighPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Medium">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource MediumPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Low">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource LowPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Critical">
                                            <Setter Property="BackgroundColor" Value="{DynamicResource CriticalPriorityColor}" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="">
                                            <Setter Property="BackgroundColor" Value="Transparent" />
                                        </DataTrigger>
                                    </Frame.Triggers>
                                    <Label HorizontalOptions="Center" VerticalOptions="Center" TextColor="Black" FontFamily="Inter-Regular" Text="{Binding Priority}">
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label" Binding="{Binding Priority}" Value="Critical">
                                                <Setter Property="TextColor" Value="White" />
                                            </DataTrigger>
                                        </Label.Triggers>
                                    </Label>
                                </Frame>-->

                                <Frame Grid.Row="2" Grid.Column="3" HeightRequest="25" Margin="0,10,0,0" Padding="5" BorderColor="Gray">
                                    <Frame.Triggers>
                                        <DataTrigger TargetType="Frame" Binding="{Binding Done}" Value="True">
                                            <Setter Property="WidthRequest" Value="80" />
                                            <Setter Property="Margin" Value="0,10,15,0"/>
                                        </DataTrigger>

                                        <DataTrigger TargetType="Frame" Binding="{Binding Done}" Value="False">
                                            <Setter Property="WidthRequest" Value="100" />
                                        </DataTrigger>
                                    </Frame.Triggers>
                                    <HorizontalStackLayout>
                                        <Image HeightRequest="20" Aspect="AspectFit" x:Name="Doneimg" Margin="0,0,2,0">
                                            <Image.Triggers>
                                                <DataTrigger TargetType="Image" Binding="{Binding Done}" Value="True">
                                                    <Setter Property="Source" Value="done.png" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Image" Binding="{Binding Done}" Value="False">
                                                    <Setter Property="Source" Value="notdone.png" />
                                                </DataTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Label VerticalTextAlignment="Center" FontAutoScalingEnabled="False" FontFamily="Inter-Bold" TextColor="{AppThemeBinding Dark=White, Light=Black}">
                                            <Label.Triggers>
                                                <DataTrigger TargetType="Label" Binding="{Binding Done}" Value="True">
                                                    <Setter Property="Text" Value="Done" />
                                                </DataTrigger>
                                                <DataTrigger TargetType="Label" Binding="{Binding Done}" Value="False">
                                                    <Setter Property="Text" Value="Not done" />
                                                </DataTrigger>
                                            </Label.Triggers>
                                            </Label>
                                        </HorizontalStackLayout>
                                </Frame>
                            </Grid>
                        </Border>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</ContentPage>