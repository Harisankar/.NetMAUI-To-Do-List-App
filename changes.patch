diff --git a/ToDoListApp.csproj b/ToDoListApp.csproj
index 2eb68cc..2b71b07 100644
--- a/ToDoListApp.csproj
+++ b/ToDoListApp.csproj
@@ -64,6 +64,7 @@
 		<None Remove="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" />
 		<None Remove="Resources\Images\settingsWhite.png" />
 		<None Remove="Resources\Images\themewhite.png" />
+		<None Remove="Resources\Images\trashblack.png" />
 		<None Remove="Resources\Splash\splash3.svg" />
 	</ItemGroup>
 
diff --git a/Views/TodoListPage.xaml b/Views/TodoListPage.xaml
index d3ef970..2b9a417 100644
--- a/Views/TodoListPage.xaml
+++ b/Views/TodoListPage.xaml
@@ -25,7 +25,7 @@
         <!-- Header Grid -->
         <!--<views:HeaderGrid x:Name="HeaderGrid" Grid.Row="0"/>-->
 
-        <Frame HeightRequest="40" Grid.Row="0" Margin="5" Padding="5" Style="{StaticResource CustomFrame}" BackgroundColor="{OnPlatform iOS=Transparent, Android={StaticResource OffWhite}}">
+        <Frame HeightRequest="40" Grid.Row="0" Margin="5" Padding="5" Style="{StaticResource CustomFrame}">
             <Grid>
                 <Grid.RowDefinitions>
                     <RowDefinition Height="*" />
@@ -39,11 +39,11 @@
                            Placeholder="Search" x:Name="SearchBar" TextChanged="SearchBar_TextChangedAsync" ios:SearchBar.SearchBarStyle="Minimal"/>
 
                 <!-- Sort Button -->
-                
-                    <ImageButton Clicked="OpenSortMenu" Source="sort.png" BackgroundColor="Transparent" Grid.Row="0" Grid.Column="1"
+
+                <ImageButton Clicked="OpenSortMenu" Source="sort.png" BackgroundColor="Transparent" Grid.Row="0" Grid.Column="1"
                                  BorderColor="Transparent" HorizontalOptions="End" Margin="0,0,0,0"
                                  AbsoluteLayout.LayoutBounds="0.2, 0.5, 30, 35" AbsoluteLayout.LayoutFlags="PositionProportional"/>
-                
+
             </Grid>
         </Frame>
 
@@ -52,80 +52,101 @@
             <ListView.ItemTemplate>
                 <DataTemplate>
                     <ViewCell>
-                        <Border Padding="5,0,0,0" Margin="5">
-                            <Grid RowSpacing="0" ColumnSpacing="0">
-                            <Grid.RowDefinitions>
-                                    <RowDefinition Height="35" />
-                                    <RowDefinition Height="30" />
-                                    <RowDefinition Height="20" />
-                                </Grid.RowDefinitions>
-                                <Grid.ColumnDefinitions>
-                                    <ColumnDefinition Width="50" />
-                                    <ColumnDefinition Width="150" />
-                                    <ColumnDefinition Width="Auto" />
-                                    <ColumnDefinition Width="*" />
-                                    <ColumnDefinition Width="Auto" />
-                                </Grid.ColumnDefinitions>
-
-                                <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="20,0,0,0" HorizontalOptions="StartAndExpand" VerticalOptions="End"
+                        <SwipeView>
+                            <SwipeView.RightItems>
+                                <SwipeItems>
+                                    <!--<SwipeItem x:Name="ItemSwipeView" Text="Delete"
+                                               IconImageSource="{AppThemeBinding Light=trashblack.png, Dark=trash.png}"
+                                               BackgroundColor="Transparent"
+                                               Invoked="OnDeleteSwipeItemInvoked">
+                                    </SwipeItem>-->
+
+                                    <SwipeItemView>
+                                        <StackLayout VerticalOptions="CenterAndExpand" Margin="7,0,0,0" WidthRequest="70">
+                                            <ImageButton Source="{AppThemeBinding Light=trashblack.png, Dark=trash.png}" Clicked="OnDeleteSwipeItemInvoked"/>
+                                            <Label Text="Delete"
+                                                   FontAttributes="Bold"
+                                                   HorizontalOptions="Center" />
+                                        </StackLayout>
+                                    </SwipeItemView>
+
+                                </SwipeItems>
+                            </SwipeView.RightItems>
+                            <Border Padding="5,0,0,0" Margin="5">
+                                <Grid RowSpacing="0" ColumnSpacing="0">
+                                    <Grid.RowDefinitions>
+                                        <RowDefinition Height="35" />
+                                        <RowDefinition Height="30" />
+                                        <RowDefinition Height="20" />
+                                    </Grid.RowDefinitions>
+                                    <Grid.ColumnDefinitions>
+                                        <ColumnDefinition Width="50" />
+                                        <ColumnDefinition Width="150" />
+                                        <ColumnDefinition Width="Auto" />
+                                        <ColumnDefinition Width="*" />
+                                        <ColumnDefinition Width="Auto" />
+                                    </Grid.ColumnDefinitions>
+
+                                    <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="20,0,0,0" HorizontalOptions="StartAndExpand" VerticalOptions="End"
                                        Text="{Binding Name}" LineBreakMode="TailTruncation" FontSize="20" FontFamily="Inter-Bold" />
 
-                                <CheckBox Grid.Row="1" Grid.Column="0" Margin="-6,0,0,0" x:Name="SelectedBox" IsChecked="{Binding IsSelected}" Focused="OnCheckBoxChecked" Unfocused="OnCheckBoxUnchecked"/>
+                                    <CheckBox Grid.Row="1" Grid.Column="0" Margin="-6,0,0,0" x:Name="SelectedBox" IsChecked="{Binding IsSelected}" Focused="OnCheckBoxChecked" Unfocused="OnCheckBoxUnchecked"/>
 
-                                <Label Grid.ColumnSpan="5" Grid.Row="2" Grid.Column="1" HorizontalOptions="StartAndExpand" LineBreakMode="TailTruncation"
+                                    <Label Grid.ColumnSpan="5" Grid.Row="2" Grid.Column="1" HorizontalOptions="StartAndExpand" LineBreakMode="TailTruncation"
                                        Margin="20,2,0,0" VerticalOptions="Start" FontSize="Body" WidthRequest="250"
                                        Text="{Binding Notes}" FontFamily="Inter-Regular" />
 
-                                <Frame Grid.Row="1" Grid.Column="1" WidthRequest="100" Padding="7,0,0,0" Margin="-10,0,0,0" HeightRequest="25" BackgroundColor="{DynamicResource Gray100}" BorderColor="Transparent">
-                                    <Label HorizontalOptions="StartAndExpand" VerticalOptions="Center" WidthRequest="90" TextColor="Black" FontFamily="Inter-Regular">
-                                        <Label.FormattedText>
-                                            <FormattedString>
-                                                <Span Text="{Binding Date, StringFormat='{0:MMM dd, HH:mm}'}" />
-                                            </FormattedString>
-                                        </Label.FormattedText>
-                                    </Label>
-                                </Frame>
- 
-                                <Frame Grid.Row="1" Grid.Column="2" WidthRequest="70" Padding="0,0,0,0" Margin="0,0,0,0" HeightRequest="25" BorderColor="Transparent">
-                                    <Frame.Triggers>
-
-                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="High">
-                                            <Setter Property="BackgroundColor" Value="{DynamicResource HighPriorityColor}" />
-                                        </DataTrigger>
-
-                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Medium">
-                                            <Setter Property="BackgroundColor" Value="{DynamicResource MediumPriorityColor}" />
-                                        </DataTrigger>
-
-                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Low">
-                                            <Setter Property="BackgroundColor" Value="{DynamicResource LowPriorityColor}" />
-                                        </DataTrigger>
-
-                                        <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Critical">
-                                            <Setter Property="BackgroundColor" Value="{DynamicResource CriticalPriorityColor}" />
-                                        </DataTrigger>
-                                    </Frame.Triggers>
-                                    <Label HorizontalOptions="Center" VerticalOptions="Center" TextColor="Black" FontFamily="Inter-Regular" Text="{Binding Priority}">
-                                        <Label.Triggers>
-                                            <DataTrigger TargetType="Label" Binding="{Binding Priority}" Value="Critical">
-                                                <Setter Property="TextColor" Value="White" />
+                                    <Frame Grid.Row="1" Grid.Column="1" WidthRequest="100" Padding="7,0,0,0" Margin="-10,0,0,0" HeightRequest="25" BackgroundColor="{DynamicResource Gray100}" BorderColor="Transparent">
+                                        <Label HorizontalOptions="StartAndExpand" VerticalOptions="Center" WidthRequest="90" TextColor="Black" FontFamily="Inter-Regular">
+                                            <Label.FormattedText>
+                                                <FormattedString>
+                                                    <Span Text="{Binding Date, StringFormat='{0:MMM dd, HH:mm}'}" />
+                                                </FormattedString>
+                                            </Label.FormattedText>
+                                        </Label>
+                                    </Frame>
+
+                                    <Frame Grid.Row="1" Grid.Column="2" WidthRequest="70" Padding="0,0,0,0" Margin="0,0,0,0" HeightRequest="25" BorderColor="Transparent">
+                                        <Frame.Triggers>
+
+                                            <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="High">
+                                                <Setter Property="BackgroundColor" Value="{DynamicResource HighPriorityColor}" />
+                                            </DataTrigger>
+
+                                            <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Medium">
+                                                <Setter Property="BackgroundColor" Value="{DynamicResource MediumPriorityColor}" />
+                                            </DataTrigger>
+
+                                            <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Low">
+                                                <Setter Property="BackgroundColor" Value="{DynamicResource LowPriorityColor}" />
+                                            </DataTrigger>
+
+                                            <DataTrigger TargetType="Frame" Binding="{Binding Priority}" Value="Critical">
+                                                <Setter Property="BackgroundColor" Value="{DynamicResource CriticalPriorityColor}" />
+                                            </DataTrigger>
+                                        </Frame.Triggers>
+                                        <Label HorizontalOptions="Center" VerticalOptions="Center" TextColor="Black" FontFamily="Inter-Regular" Text="{Binding Priority}">
+                                            <Label.Triggers>
+                                                <DataTrigger TargetType="Label" Binding="{Binding Priority}" Value="Critical">
+                                                    <Setter Property="TextColor" Value="White" />
+                                                </DataTrigger>
+                                            </Label.Triggers>
+                                        </Label>
+                                    </Frame>
+
+                                    <Image Grid.Row="1" Grid.Column="4" HeightRequest="50" Margin="0,0,10,0" Aspect="AspectFit" x:Name="Doneimg">
+                                        <Image.Triggers>
+                                            <DataTrigger TargetType="Image" Binding="{Binding Done}" Value="True">
+                                                <Setter Property="Source" Value="done.png" />
+                                            </DataTrigger>
+                                            <DataTrigger TargetType="Image" Binding="{Binding Done}" Value="False">
+                                                <Setter Property="Source" Value="notdone.png" />
                                             </DataTrigger>
-                                        </Label.Triggers>
-                                    </Label>
-                                </Frame>
-
-                                <Image Grid.Row="1" Grid.Column="4" HeightRequest="50" Margin="0,0,10,0" Aspect="AspectFit" x:Name="Doneimg">
-                                    <Image.Triggers>
-                                        <DataTrigger TargetType="Image" Binding="{Binding Done}" Value="True">
-                                            <Setter Property="Source" Value="done.png" />
-                                        </DataTrigger>
-                                        <DataTrigger TargetType="Image" Binding="{Binding Done}" Value="False">
-                                            <Setter Property="Source" Value="notdone.png" />
-                                        </DataTrigger>
-                                    </Image.Triggers>
-                                </Image>
-                            </Grid>
-                        </Border>
+                                        </Image.Triggers>
+                                    </Image>
+                                </Grid>
+                            </Border>
+                        </SwipeView>
                     </ViewCell>
                 </DataTemplate>
             </ListView.ItemTemplate>
diff --git a/Views/TodoListPage.xaml.cs b/Views/TodoListPage.xaml.cs
index 8c7b92f..951218c 100644
--- a/Views/TodoListPage.xaml.cs
+++ b/Views/TodoListPage.xaml.cs
@@ -10,6 +10,18 @@ namespace ToDoListApp.Views
         public TodoListPage()
         {
             InitializeComponent();
+
+            Application.Current.RequestedThemeChanged += (s, a) =>
+            {
+                
+            };
+        }
+        async void OnDeleteSwipeItemInvoked(object sender, EventArgs e)
+        {
+            var item = (sender as ImageButton).BindingContext as Todoitem;
+            TodoitemDatabase database = await TodoitemDatabase.Instance;
+            await database.DeleteItemAsync(item);
+            await UpdateListView();
         }
 
         protected override async void OnAppearing()
